{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","App.module.css","components/filter/transitions/pop.module.css","components/filter/transitions/slide.module.css","components/contactForm/ContactForm.js","components/filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","reset","setState","onChange","e","target","value","submitData","preventDefault","console","log","props","contacts","some","item","includes","alert","addContact","a","newContact","id","shortId","addContactToState","this","onSubmit","className","s","nameContainer","header","type","input","button","Component","Filter","searchName","onSearchName","handleDelete","removeContactFromState","filter","elem","toLowerCase","placeholder","TransitionGroup","component","ulFilteredContacts","filterContacts","map","CSSTransition","key","timeout","classNames","popTransitions","liFilteredContact","onClick","App","localStorage","setItem","JSON","stringify","container","ReactDOM","render","document","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,OAAS,4BAA4B,MAAQ,qDAAqD,OAAS,wD,mBCAhLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,kBAAoB,kCAAkC,mBAAqB,mCAAmC,OAAS,yB,mBCAvMD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,sB,mBCA9DD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,4ECA1HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,gLC+EjHC,E,4MA3EbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,MAAQ,WACN,EAAKC,SAAS,CACZH,KAAM,GACNC,OAAQ,M,EAIZG,SAAW,SAACC,GACV,IAAML,EAAOK,EAAEC,OAAON,KAChBO,EAAQF,EAAEC,OAAOC,MACvB,EAAKJ,SAAL,eAAiBH,EAAOO,K,EAG1BC,WAAa,SAACH,GAAO,IACXL,EAAS,EAAKD,MAAdC,KACRK,EAAEI,iBACFC,QAAQC,IAAI,OAAQX,GACpB,EAAKY,MAAMC,SAASC,MAAK,SAACC,GAAD,OAAUA,EAAKf,KAAKgB,SAAShB,MAClDiB,MAAM,GAAD,OAAIjB,EAAJ,oCACL,EAAKkB,c,EAGXA,W,uCAAa,WAAOb,GAAP,qBAAAc,EAAA,wDACc,EAAKpB,MAAtBC,EADG,EACHA,KAAMC,EADH,EACGA,OACRmB,EAAa,CACjBC,GAAIC,cACJtB,OACAC,UAEF,EAAKW,MAAMW,kBAAkBH,GAC7B,EAAKlB,QARM,2C,6GAWH,IAAD,EACkBsB,KAAKzB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,kBAAC,WAAD,KACE,0BAAMwB,SAAUD,KAAKhB,YACnB,yBAAKkB,UAAWC,IAAEC,eAChB,wBAAIF,UAAWC,IAAEE,QAAjB,QACA,2BACEC,KAAK,OACL9B,KAAK,OACLI,SAAUoB,KAAKpB,SACfG,MAAOP,EACP0B,UAAWC,IAAEI,SAGjB,yBAAKL,UAAWC,IAAEC,eAChB,wBAAIF,UAAWC,IAAEE,QAAjB,UACA,2BACEC,KAAK,OACL9B,KAAK,SACLI,SAAUoB,KAAKpB,SACfG,MAAON,EACPyB,UAAWC,IAAEI,SAIjB,6BACA,4BAAQD,KAAK,SAAS1B,SAAUoB,KAAKhB,WAAYkB,UAAWC,IAAEK,QAA9D,eAGA,mC,GArEgBC,a,0DC4EXC,E,4MAzEbnC,MAAQ,CACNoC,WAAY,I,EAGdjC,MAAQ,WACN,EAAKC,SAAS,CACZgC,WAAY,M,EAIhBC,aAAe,SAAC/B,GACd,IAAML,EAAOK,EAAEC,OAAON,KAChBO,EAAQF,EAAEC,OAAOC,MACvB,EAAKJ,SAAL,eACGH,EAAOO,IAEVG,QAAQC,IAAI,sBAAuB,EAAKZ,MAAMc,W,EAShDwB,a,uCAAe,WAAOhC,GAAP,eAAAc,EAAA,6DACbT,QAAQC,IAAI,2BAAyBN,EAAEC,QACjCe,EAAKhB,EAAEC,OAAOe,GACpBX,QAAQC,IAAI,KAAMU,GAHL,SAIP,EAAKT,MAAM0B,uBAAuBjB,GAJ3B,OAKb,EAAKnB,QALQ,2C,qHANG,IAAD,OACf,OAAOsB,KAAKZ,MAAMC,SAAS0B,QAAO,SAACC,GAAD,OAChCA,EAAKxC,KAAKyC,cAAczB,SAAS,EAAKjB,MAAMoC,WAAWM,oB,+BAYjD,IAAD,OACCN,EAAeX,KAAKzB,MAApBoC,WACR,OACE,kBAAC,WAAD,KACE,wBAAIT,UAAWC,IAAEE,QAAjB,wBACA,2BACEC,KAAK,OACL9B,KAAK,aACLO,MAAO4B,EACP/B,SAAUoB,KAAKY,aACfV,UAAWC,IAAEI,MACbW,YAAY,uBAGd,kBAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKlB,UAAWC,IAAEkB,oBAC1CrB,KAAKsB,iBAAiBC,KAAI,SAAChC,GAAD,OACzB,kBAACiC,EAAA,EAAD,CACEC,IAAKlC,EAAKM,GACV6B,QAAS,IACTC,WAAYC,KAEZ,wBAAI1B,UAAWC,IAAE0B,mBACdtC,EAAKf,KADR,KACgBe,EAAKd,OACnB,4BACEoB,GAAIN,EAAKM,GACTS,KAAK,SACLwB,QAAS,EAAKjB,aACdX,UAAWC,IAAEK,QAJf,qB,GAzDKC,a,iBCoCNsB,E,4MApCbxD,MAAQ,CACNc,SAAU,I,EAGZU,kBAAoB,SAACH,GAAgB,IAC3BP,EAAa,EAAKd,MAAlBc,SACR,EAAKV,SAAS,CAAEU,SAAS,CAAEO,GAAH,mBAAkBP,MAC1C2C,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,EAAK5D,MAAMc,Y,EAG7DyB,uBAAyB,SAACjB,GACxB,EAAKlB,SAAS,CACZU,SAAS,YAAK,EAAKd,MAAMc,SAAS0B,QAAO,SAACC,GAAD,OAAUA,EAAKnB,KAAOA,QAEjEmC,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,EAAK5D,MAAMc,Y,uDAGnD,IACAA,EAAaW,KAAKzB,MAAlBc,SACR,OACE,yBAAKa,UAAWC,IAAEiC,WAChB,wBAAIlC,UAAWC,IAAEE,QAAjB,aACA,kBAAC,EAAD,CACEhB,SAAUA,EACVU,kBAAmBC,KAAKD,oBAG1B,kBAAC,EAAD,CACEV,SAAUA,EACVyB,uBAAwBd,KAAKc,8B,GA9BrBL,aCAlB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d589b3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameContainer\":\"ContactForm_nameContainer__gOkIS\",\"header\":\"ContactForm_header__Kbx5_\",\"input\":\"ContactForm_input__1QDdh ContactForm_header__Kbx5_\",\"button\":\"ContactForm_button__37AjO ContactForm_header__Kbx5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Filter_header__zEDNJ\",\"input\":\"Filter_input__2mMl-\",\"liFilteredContact\":\"Filter_liFilteredContact__25Vum\",\"ulFilteredContacts\":\"Filter_ulFilteredContacts__2W__w\",\"button\":\"Filter_button__1YGOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__MS0kQ\",\"header\":\"App_header__3J1N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__11_0J\",\"enterActive\":\"pop_enterActive__3v1VK\",\"exit\":\"pop_exit__JiLXo\",\"exitActive\":\"pop_exitActive__2qu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2csRR\",\"enterActive\":\"slide_enterActive__34Z4a\",\"exit\":\"slide_exit__3wulY\",\"exitActive\":\"slide_exitActive__1ou8g\"};","import React, { Component, Fragment } from \"react\";\r\nimport { v4 as shortId } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitData = (e) => {\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n    console.log(\"name\", name);\r\n    this.props.contacts.some((item) => item.name.includes(name))\r\n      ? alert(`${name} is already exists in contacts!`)\r\n      : this.addContact();\r\n  };\r\n\r\n  addContact = async (e) => {\r\n    const { name, number } = this.state;\r\n    const newContact = {\r\n      id: shortId(),\r\n      name,\r\n      number,\r\n    };\r\n    this.props.addContactToState(newContact);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.submitData}>\r\n          <div className={s.nameContainer}>\r\n            <h3 className={s.header}>Name</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={this.onChange}\r\n              value={name}\r\n              className={s.input}\r\n            />\r\n          </div>\r\n          <div className={s.nameContainer}>\r\n            <h3 className={s.header}>Number</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              onChange={this.onChange}\r\n              value={number}\r\n              className={s.input}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <button type=\"submit\" onChange={this.submitData} className={s.button}>\r\n            add contact\r\n          </button>\r\n          <br />\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport s from \"./Filter.module.css\";\r\nimport slideTransitions from \"./transitions/slide.module.css\";\r\nimport popTransitions from \"./transitions/pop.module.css\";\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    searchName: \"\",\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      searchName: \"\",\r\n    });\r\n  };\r\n\r\n  onSearchName = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    console.log(\"this.state.contacts\", this.state.contacts);\r\n  };\r\n\r\n  filterContacts() {\r\n    return this.props.contacts.filter((elem) =>\r\n      elem.name.toLowerCase().includes(this.state.searchName.toLowerCase())\r\n    );\r\n  }\r\n\r\n  handleDelete = async (e) => {\r\n    console.log(\"e.target ----------->\", e.target);\r\n    const id = e.target.id;\r\n    console.log(\"id\", id);\r\n    await this.props.removeContactFromState(id);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { searchName } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <h3 className={s.header}>Find contact by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchName\"\r\n          value={searchName}\r\n          onChange={this.onSearchName}\r\n          className={s.input}\r\n          placeholder=\"Input name contact\"\r\n        ></input>\r\n\r\n        <TransitionGroup component=\"ul\" className={s.ulFilteredContacts}>\r\n          {this.filterContacts().map((item) => (\r\n            <CSSTransition\r\n              key={item.id}\r\n              timeout={500}\r\n              classNames={popTransitions}\r\n            >\r\n              <li className={s.liFilteredContact}>\r\n                {item.name}, {item.number}\r\n                <button\r\n                  id={item.id}\r\n                  type=\"button\"\r\n                  onClick={this.handleDelete}\r\n                  className={s.button}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport Filter from \"./components/filter/Filter\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n  };\n\n  addContactToState = (newContact) => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [newContact, ...contacts] });\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  };\n\n  removeContactFromState = (id) => {\n    this.setState({\n      contacts: [...this.state.contacts.filter((elem) => elem.id !== id)],\n    });\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div className={s.container}>\n        <h2 className={s.header}>Phonebook</h2>\n        <ContactForm\n          contacts={contacts}\n          addContactToState={this.addContactToState}\n        />\n\n        <Filter\n          contacts={contacts}\n          removeContactFromState={this.removeContactFromState}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}